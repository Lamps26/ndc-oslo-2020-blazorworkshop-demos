TAB: Before

- Updated TodoItem with fluentvalidations

public class TodoItem
{
    public string Description { get; set; }
    public int Importance { get; set; }
}

public class TodoItemValidator : AbstractValidator<TodoItem>
{
    public TodoItemValidator()
    {
        RuleFor(x => x.Description).NotEmpty().WithMessage("Please enter a description");
        RuleFor(x => x.Importance).GreaterThan(0).WithMessage("Please enter a value greater than 0");
    }
}

TAB: After

- InputSlider

@inherits InputBase<int>

<input type="range" 
       @bind="@CurrentValueAsString" /> (@CurrentValueAsString)

@code {

    protected override bool TryParseValueFromString(string value, out int result, out string validationErrorMessage)
    {
        if (int.TryParse(value, out result))
        {
            validationErrorMessage = null;
            return true;
        }
        else
        {
            validationErrorMessage = "Unable to convert value to int";
            return false;
        }
    }

}

- Add additional attributes

@attributes="AdditionalAttributes"

- Pass min max to slider

 min="1" max="10"